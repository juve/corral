###############################################################################
# GLIDEIN SERVICE CONFIGURATION
#
# This configuration file specifies configuration parameters for the glidein
# grid service.
#
# The service will look for this file in the following locations in order:
# 
# 1. The system property "glidein.config" (specified using 
#    -Dglidein.config=path when launching the service container's JVM)
# 2. The environment variable $GLIDEIN_CONFIG
# 3. $GLIDEIN_HOME/etc/glidein.config
# 4. $HOME/.glidein/glidein.config
# 5. $GLOBUS_LOCATION/etc/glidein_service/glidein.config
#
# The first location that contains a readable file wins and all properties
# will be loaded from that file.
#
# Values in this file can contain expressions that will be evaluated at runtime
# by the service. These expressions have the form: ${NAMESPACE:KEY} or
# ${KEY} where NAMESPACE specifies the type of key and KEY is the name of the
# variable or property to retrieve. Acceptable namespaces are "env", which 
# can be used for environment variables available to the Globus container, and
# "sys", which can be used for system properties available via the container's 
# JVM. Examples include:
#
# some.dir = ${sys:user.home}/somedir # a directory under the home dir of the
#                                     # user who launched the container
# some.file = ${some.dir}/somefile    # a file in the above directory
# some.path = ${env:PATH}             # a copy of the PATH environment variable
#                                     # of the user who launched the container
#
# These expressions are evaluated recursively, so if the value of an 
# expression contains a sub-expression, the sub-expression will be 
# transliterated as well. Other than that, it is a regular Java properties 
# file.
#
###############################################################################

# Host:port where service runs
glidein.host = juve.usc.edu:8080

# Glidein home directory
glidein.home = ${env:GLIDEIN_HOME}

# Configuration files
glidein.etc = ${glidein.home}/etc
#glidein.etc = /etc/glidein_service

# Jar files, etc
glidein.lib = ${glidein.home}/lib

# Staged executables
glidein.libexec = ${glidein.home}/libexec

# Working directories
glidein.var = ${glidein.home}/var
#glidein.var = ${globus.location}/var/glidein_service
#glidein.var = /var/glidein_service

# Scripts for installing, running and uninstalling glideins
glidein.install = ${glidein.libexec}/glidein_install
glidein.uninstall = ${glidein.libexec}/glidein_uninstall
glidein.run = ${glidein.libexec}/glidein_run

# Default Condor glidein daemon configuration file
# Client can override by providing their own configuration
glidein.condor.config = ${glidein.etc}/glidein_condor_config

# Urls for servers where glidein executables are stored.
# Allowed protocols: ftp:// http:// gsiftp://
glidein.staging.urls = http://array.usc.edu/glidein/binaries,\
	http://www.cs.wisc.edu/condor/glidein/binaries,\
	gsiftp://gridftp.cs.wisc.edu/p/condor/public/binaries/glidein

# Database Settings
#glidein.db.factory = edu.usc.glidein.service.persist.memory.MemoryDBFactory
glidein.db.factory = edu.usc.glidein.service.persist.mysql.MySQLDBFactory
glidein.db.url = jdbc:mysql://localhost:3306/glidein
glidein.db.user = scott
glidein.db.password = tiger

# Path to the globus installation directory
globus.location = ${env:GLOBUS_LOCATION}

# The path to the Condor home directory
condor.home = ${env:CONDOR_HOME}
#condor.home = /opt/condor/default

# The path to the Condor bin directory
condor.bin = ${condor.home}/bin

# The path to the Condor configuration file
condor.config = ${env:CONDOR_CONFIG}
#condor.config = ${condor.home}/etc/condor_config
#condor.config = /etc/condor/condor_config